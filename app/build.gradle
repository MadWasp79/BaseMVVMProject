apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion "$compile_sdk_version".toInteger()
    defaultConfig {
        applicationId "$application_id"
        minSdkVersion "$min_sdk_version".toInteger()
        targetSdkVersion "$target_sdk_version".toInteger()

        def versionPropsFile = file('version.properties')
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))

            def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
            def versionMinor = versionProps['VERSION_MINOR'].toInteger()
            def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)

            versionCode versionBuild
            versionName "${versionMajor}.${versionMinor}.${versionBuild}"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = "${variant.applicationId}_" +
                        "version_${variant.versionName}_" +
                        "version_code_${variant.versionCode}_" +
                        "${variant.buildType.name}.apk"
            }
        }

        vectorDrawables.useSupportLibrary = true
        //fix on project
        signingConfigs {
            release {
                storeFile file("../keystore/release.keystore")
                storePassword "somerelease"
                keyAlias "someRelease"
                keyPassword "somerelease"
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            ext.betaDistributionReleaseNotes = "Release Notes for this build."
//            ext.betaDistributionGroupAliases = "some-testers"
//            ext.betaDistributionNotifications = true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            ext.betaDistributionReleaseNotes = "Release Notes for this build."
//            ext.betaDistributionGroupAliases = "some-testers"
//            ext.betaDistributionNotifications = true

            signingConfig signingConfigs.release
        }
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

// Android X
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.core:core:$appcompat_version"
    implementation "androidx.legacy:legacy-support-v4:$appcompat_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Design
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:$appcompat_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    //Image Processing
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.jkwiecien:EasyImage:$easyimage_version"

    //viewpager indicator
    implementation "com.romandanylyk:pageindicatorview:$page_indicator"

    // Timber (log)
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Rx java
    implementation "io.reactivex.rxjava2:rxandroid:$rx_java_version"
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt"com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
//    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Google maps
    implementation "com.google.android.gms:play-services-maps:$play_services_maps_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_version"

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
}
